events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting for public access
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=consensus:10m rate=2r/s;

    # Upstream servers
    upstream api_backend_new {
        server localhost:8001;  # New API with GLM-4-AIR
    }

    upstream api_backend_legacy {
        server localhost:8000;  # Legacy API
    }

    # HTTP server for public access
    server {
        listen 80;
        server_name ai.norvyn.com 35.229.146.254;
        
        # CORS headers for GPT access
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        
        # Handle preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain charset=UTF-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # New API with GLM-4-AIR (primary)
        location ~ ^/(consensus|models|health|analytics) {
            limit_req zone=consensus burst=5 nodelay;
            proxy_pass http://api_backend_new;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        }

        # API documentation
        location ~ ^/(docs|openapi\.json) {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://api_backend_new;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Legacy API fallback
        location /legacy/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://api_backend_legacy/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Status endpoint
        location /status {
            access_log off;
            return 200 '{"status":"healthy","api":"GLM-4-AIR integrated","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin "*";
        }

        # Root redirect to docs
        location = / {
            return 302 /docs;
        }
    }

    # HTTPS server (if SSL certificates are available)
    server {
        listen 443 ssl http2;
        server_name ai.norvyn.com;
        
        # SSL Configuration (self-signed for now)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL Security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # CORS headers for GPT access
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

        # Same locations as HTTP server
        location ~ ^/(consensus|models|health|analytics) {
            limit_req zone=consensus burst=5 nodelay;
            proxy_pass http://api_backend_new;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            add_header Access-Control-Allow-Origin "*" always;
        }

        location ~ ^/(docs|openapi\.json) {
            proxy_pass http://api_backend_new;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /status {
            access_log off;
            return 200 '{"status":"healthy","api":"GLM-4-AIR integrated","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin "*";
        }

        location = / {
            return 302 /docs;
        }
    }
} 